Object.defineProperty(exports, "__esModule", { value: true });
exports.showImage = void 0;
var d3_1 = require("d3");
var Ani_1 = require("../ani/Ani");
var Image_1 = require("../component/Image");
var Ease_1 = require("../util/Ease");
var Fade_1 = require("../wrapper/Fade");
var Scale_1 = require("../wrapper/Scale");
/**
 * @deprecated
 * Generating animations using this method will result in rendering errors in the Node environment.
 */
function showImage(_a) {
    var 
    // FIXME: Generating animations using this method will result in rendering errors in the Node environment.
    _b = _a.src, 
    // FIXME: Generating animations using this method will result in rendering errors in the Node environment.
    src = _b === void 0 ? "" : _b, _c = _a.position, position = _c === void 0 ? { x: 250, y: 250 } : _c, _d = _a.shape, shape = _d === void 0 ? { width: 500, height: 500 } : _d, _e = _a.time, time = _e === void 0 ? 0 : _e, _f = _a.freezeTime, freezeTime = _f === void 0 ? 2 : _f, _g = _a.center, center = _g === void 0 ? null : _g, _h = _a.animation, animation = _h === void 0 ? "scale" : _h, _j = _a.animationTime, animationTime = _j === void 0 ? 0.5 : _j, _k = _a.ease, ease = _k === void 0 ? d3_1.easeElasticOut : _k;
    var ani = new Ani_1.Ani();
    var img = new Image_1.Image({ src: src, position: position, shape: shape });
    if (!center)
        img.center = { x: shape.width / 2, y: shape.height / 2 };
    var wrapped;
    if (animation === "scale") {
        wrapped = Scale_1.getScaleWrapped(img, Ease_1.customInOut([
            time,
            time + animationTime,
            time + animationTime + freezeTime,
            time + animationTime * freezeTime + freezeTime,
        ], [0, 1], [ease, ease]));
    }
    else {
        wrapped = Fade_1.getFadeWrapped(img, Ease_1.customInOut([
            time,
            time + animationTime,
            time + animationTime + freezeTime,
            time + animationTime * freezeTime + freezeTime,
        ]));
    }
    // ani.children.push(wrapped);
    ani.getComponent = function (sec) {
        return wrapped.getComponent(sec);
    };
    return ani;
}
exports.showImage = showImage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2hvd0ltYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvcmUvY3VzdG9tL1Nob3dJbWFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHlCQUFvQztBQUNwQyxrQ0FBaUM7QUFDakMsNENBQTJDO0FBQzNDLHFDQUEyQztBQUMzQyx3Q0FBaUQ7QUFDakQsMENBQW1EO0FBRW5EOzs7R0FHRztBQUNILFNBQVMsU0FBUyxDQUFDLEVBV2xCOztJQVZDLDBHQUEwRztJQUMxRyxXQUFRO0lBRFIsMEdBQTBHO0lBQzFHLEdBQUcsbUJBQUcsRUFBRSxLQUFBLEVBQ1IsZ0JBQTZCLEVBQTdCLFFBQVEsbUJBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBQSxFQUM3QixhQUFtQyxFQUFuQyxLQUFLLG1CQUFHLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLEtBQUEsRUFDbkMsWUFBUSxFQUFSLElBQUksbUJBQUcsQ0FBQyxLQUFBLEVBQ1Isa0JBQWMsRUFBZCxVQUFVLG1CQUFHLENBQUMsS0FBQSxFQUNkLGNBQWEsRUFBYixNQUFNLG1CQUFHLElBQUksS0FBQSxFQUNiLGlCQUF1QyxFQUF2QyxTQUFTLG1CQUFHLE9BQTJCLEtBQUEsRUFDdkMscUJBQW1CLEVBQW5CLGFBQWEsbUJBQUcsR0FBRyxLQUFBLEVBQ25CLFlBQXFCLEVBQXJCLElBQUksbUJBQUcsbUJBQWMsS0FBQTtJQUVyQixJQUFNLEdBQUcsR0FBRyxJQUFJLFNBQUcsRUFBRSxDQUFDO0lBQ3RCLElBQU0sR0FBRyxHQUFHLElBQUksYUFBSyxDQUFDLEVBQUUsR0FBRyxLQUFBLEVBQUUsUUFBUSxVQUFBLEVBQUUsS0FBSyxPQUFBLEVBQUUsQ0FBQyxDQUFDO0lBQ2hELElBQUksQ0FBQyxNQUFNO1FBQUUsR0FBRyxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQztJQUN0RSxJQUFJLE9BQVksQ0FBQztJQUNqQixJQUFJLFNBQVMsS0FBSyxPQUFPLEVBQUU7UUFDekIsT0FBTyxHQUFHLHVCQUFlLENBQ3ZCLEdBQUcsRUFDSCxrQkFBVyxDQUNUO1lBQ0UsSUFBSTtZQUNKLElBQUksR0FBRyxhQUFhO1lBQ3BCLElBQUksR0FBRyxhQUFhLEdBQUcsVUFBVTtZQUNqQyxJQUFJLEdBQUcsYUFBYSxHQUFHLFVBQVUsR0FBRyxVQUFVO1NBQy9DLEVBQ0QsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQ04sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQ2IsQ0FDRixDQUFDO0tBQ0g7U0FBTTtRQUNMLE9BQU8sR0FBRyxxQkFBYyxDQUN0QixHQUFHLEVBQ0gsa0JBQVcsQ0FBQztZQUNWLElBQUk7WUFDSixJQUFJLEdBQUcsYUFBYTtZQUNwQixJQUFJLEdBQUcsYUFBYSxHQUFHLFVBQVU7WUFDakMsSUFBSSxHQUFHLGFBQWEsR0FBRyxVQUFVLEdBQUcsVUFBVTtTQUMvQyxDQUFDLENBQ0gsQ0FBQztLQUNIO0lBQ0QsOEJBQThCO0lBQzlCLEdBQUcsQ0FBQyxZQUFZLEdBQUcsVUFBQyxHQUFHO1FBQ3JCLE9BQU8sT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNuQyxDQUFDLENBQUM7SUFDRixPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUM7QUFDUSw4QkFBUyJ9