var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.recourse = exports.Recourse = void 0;
var ImageLoader_1 = require("./ImageLoader");
var d3_1 = require("d3");
var Recourse = /** @class */ (function () {
    function Recourse() {
        this.imagesPromise = new Map();
        this.images = new Map();
        this.dataPromise = new Map();
        this.data = new Map();
        if (typeof window === "undefined") {
            var fetch = require("node-fetch-polyfill");
            global.fetch = fetch;
        }
    }
    Recourse.prototype.setup = function () {
        var e_1, _a, e_2, _b;
        var _this = this;
        var promises = [];
        var _loop_1 = function (key, promise) {
            promise.then(function (src) {
                if (src)
                    return _this.images.set(key, src);
                else
                    return _this.images;
            });
            promises.push(promise);
        };
        try {
            for (var _c = __values(this.imagesPromise), _d = _c.next(); !_d.done; _d = _c.next()) {
                var _e = __read(_d.value, 2), key = _e[0], promise = _e[1];
                _loop_1(key, promise);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var _loop_2 = function (key, promise) {
            promise.then(function (data) { return _this.data.set(key, data); });
            promises.push(promise);
        };
        try {
            for (var _f = __values(this.dataPromise), _g = _f.next(); !_g.done; _g = _f.next()) {
                var _h = __read(_g.value, 2), key = _h[0], promise = _h[1];
                _loop_2(key, promise);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return Promise.all(promises);
    };
    Recourse.prototype.loadImage = function (path, name) {
        var promise = ImageLoader_1.imageLoader.load(path);
        if (name) {
            this.imagesPromise.set(name, promise);
        }
        this.imagesPromise.set(path, promise);
        return promise;
    };
    Recourse.prototype.loadCSV = function (path, name) {
        if (typeof path !== "string") {
            path = path.default;
        }
        if (typeof window !== "undefined") {
            var promise = d3_1.csv(path);
            this.dataPromise.set(name, promise);
            return promise;
        }
        else {
            var fs = require("fs");
            var file = fs.readFileSync(path, "utf8");
            var promise = new Promise(function (resolve, reject) {
                try {
                    resolve(d3_1.csvParse(file));
                }
                catch (e) {
                    reject(e);
                }
            });
            this.dataPromise.set(name, promise);
            return promise;
        }
    };
    Recourse.prototype.loadJSON = function (path, name) {
        if (typeof path !== "string") {
            path = path.default;
        }
        var promise = d3_1.json(path);
        this.dataPromise.set(name, promise);
        return promise;
    };
    return Recourse;
}());
exports.Recourse = Recourse;
exports.recourse = new Recourse();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVjb3Vyc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29yZS9SZWNvdXJzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDZDQUE0QztBQUM1Qyx5QkFBeUM7QUFDekM7SUFDRTtRQXFCUSxrQkFBYSxHQUdqQixJQUFJLEdBQUcsRUFBRSxDQUFDO1FBQ2QsV0FBTSxHQUFtQyxJQUFJLEdBQUcsRUFBRSxDQUFDO1FBRTNDLGdCQUFXLEdBQThCLElBQUksR0FBRyxFQUFFLENBQUM7UUFDM0QsU0FBSSxHQUFxQixJQUFJLEdBQUcsRUFBRSxDQUFDO1FBM0JqQyxJQUFJLE9BQU8sTUFBTSxLQUFLLFdBQVcsRUFBRTtZQUNqQyxJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUMzQyxNQUFNLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztTQUN0QjtJQUNILENBQUM7SUFDRCx3QkFBSyxHQUFMOztRQUFBLGlCQWNDO1FBYkMsSUFBTSxRQUFRLEdBQUcsRUFBb0IsQ0FBQztnQ0FDMUIsR0FBRyxFQUFFLE9BQU87WUFDdEIsT0FBTyxDQUFDLElBQUksQ0FBQyxVQUFDLEdBQTZCO2dCQUN6QyxJQUFJLEdBQUc7b0JBQUUsT0FBTyxLQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7O29CQUNyQyxPQUFPLEtBQUksQ0FBQyxNQUFNLENBQUM7WUFDMUIsQ0FBQyxDQUFDLENBQUM7WUFDSCxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDOzs7WUFMekIsS0FBNkIsSUFBQSxLQUFBLFNBQUEsSUFBSSxDQUFDLGFBQWEsQ0FBQSxnQkFBQTtnQkFBcEMsSUFBQSxLQUFBLG1CQUFjLEVBQWIsR0FBRyxRQUFBLEVBQUUsT0FBTyxRQUFBO3dCQUFaLEdBQUcsRUFBRSxPQUFPO2FBTXZCOzs7Ozs7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