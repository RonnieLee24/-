var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseChart = void 0;
var d3_1 = require("d3");
var moment_1 = __importDefault(require("moment"));
var Ani_1 = require("../ani/Ani");
var CanvasHelper_1 = require("../CanvasHelper");
var Component_1 = require("../component/Component");
var Text_1 = require("../component/Text");
var Constant_1 = require("../Constant");
var Recourse_1 = require("../Recourse");
var lodash_1 = require("lodash");
var BaseChart = /** @class */ (function (_super) {
    __extends(BaseChart, _super);
    function BaseChart(options) {
        var _a, _b;
        var _this = _super.call(this) || this;
        _this.yAxisPadding = 4;
        _this.xAxisPadding = 4;
        _this.tickKeyFrameDuration = 1;
        _this.idField = "id";
        _this.colorField = "id";
        _this.imageField = "id";
        _this.dateField = "date";
        _this.valueField = "value";
        _this.valueKeys = ["value"];
        _this.imageKey = "image";
        _this.position = { x: 0, y: 0 };
        _this.margin = { left: 20, top: 20, right: 20, bottom: 20 };
        _this.freezeTime = [2, 2];
        _this.fadeTime = [0.5, 0];
        _this.dataName = "data";
        _this.metaName = "meta";
        _this.dateFormat = "%Y-%m-%d";
        _this.xTickFormat = d3_1.format(",d");
        _this.yTickFormat = d3_1.format(",d");
        _this.valueFormat = function (cData) {
            return d3_1.format(",.0f")(cData[_this.valueField]);
        };
        _this.labelFormat = function (id, meta, data) {
            if (meta && meta.get(id) && meta.get(id).name) {
                return meta.get(id).name;
            }
            else {
                return id;
            }
        };
        if (!options)
            return _this;
        if (options.fadeTime)
            _this.fadeTime = options.fadeTime;
        if (options.aniTime)
            _this.aniTime = options.aniTime;
        if (options.freezeTime)
            _this.freezeTime = options.freezeTime;
        if (options.idField)
            _this.idField = options.idField;
        if (options.colorField)
            _this.colorField = options.colorField;
        if (options.dateField)
            _this.dateField = options.dateField;
        if (options.valueKeys)
            _this.valueKeys = options.valueKeys;
        if (options.valueField)
            _this.valueField = options.valueField;
        if (options.imageField)
            _this.imageField = options.imageField;
        if (options.margin !== undefined)
            _this.margin = options.margin;
        if (options.shape)
            _this.shape = options.shape;
        if (options.dateFormat)
            _this.dateFormat = options.dateFormat;
        if (options.labelFormat)
            _this.labelFormat = options.labelFormat;
        if (options.valueFormat)
            _this.valueFormat = options.valueFormat;
        if (options.dataName)
            _this.dataName = options.dataName;
        if (options.metaName)
            _this.metaName = options.metaName;
        if (options.visualRange)
            _this.visualRange = options.visualRange;
        if (options.position)
            _this.position = options.position;
        _this.interpolateInitValue = (_a = options.interpolateInitValue) !== null && _a !== void 0 ? _a : NaN;
        _this.maxIntervalMS = (_b = options.maxIntervalMS) !== null && _b !== void 0 ? _b : Number.MAX_VALUE;
        return _this;
    }
    BaseChart.prototype.setup = function (stage) {
        var _this = this;
        _super.prototype.setup.call(this, stage);
        this.setData();
        this.setMeta();
        this.setDefaultAniTime(stage);
        this.setDataScales();
        this.setAlphaScale();
        // 初始化整体最值
        this.totallyMax = d3_1.max(this.data, function (d) { return d[_this.valueField]; });
        this.totallyMin = d3_1.min(this.data, function (d) { return d[_this.valueField]; });
        // 初始化历史最值
        this.historyMax = this.totallyMin;
        this.historyMin = this.totallyMin;
        // 用于计算坐标
        this.currentMax = this.historyMin;
        this.currentMin = this.historyMax;
        if (!this.shape) {
            this.shape = {
                width: stage.canvas.width,
                height: stage.canvas.height,
            };
        }
    };
    BaseChart.prototype.setData = function () {
        var _this = this;
        this.data = lodash_1.cloneDeep(Recourse_1.recourse.data.get(this.dataName));
        this.data.forEach(function (d) {
            Object.keys(d).forEach(function (k) {
                switch (k) {
                    case _this.dateField:
                        // 日期字符串转成日期
                        d[k] = moment_1.default(d[_this.dateField]).toDate();
                        break;
                    case _this.idField:
                        // ID保持不变
                        break;
                    default:
                        // 数值转成数字
                        if (_this.valueKeys.includes(k) || _this.valueField === k) {
                            d[k] = +d[k].replace(/,/g, "");
                        }
                }
            });
        });
        this.dataGroupByID = d3_1.group(this.data, function (d) { return d[_this.idField]; });
        var dataGroupByDate = d3_1.group(this.data, function (d) {
            return d[_this.dateField].getTime();
        });
        var result = new Map();
        dataGroupByDate.forEach(function (v, k) {
            result.set(new Date(k), v);
        });
        this.dataGroupByDate = result;
    };
    BaseChart.prototype.setDataScales = function () {
        var _this = this;
        // 整体日期范围
        var dateExtent = d3_1.extent(this.data, function (d) { return d[_this.dateField]; });
        // 播放进度到日期的映射
        this.secToDate = d3_1.scaleLinear(this.aniTime, dateExtent).clamp(true);
        var g = d3_1.group(this.data, function (d) { return d[_this.idField]; });
        var dataScales = new Map();
        g.forEach(function (dataList, k) {
            // 如果设置了 maxInterval 则需要插入 NaN
            dataList.sort(function (a, b) { return a[_this.dateField].getTime() - b[_this.dateField].getTime(); });
            _this.insertNaN(dataList, dateExtent);
            var dateList = dataList.map(function (d) { return d[_this.dateField]; });
            var secList = dateList.map(function (d) { return _this.secToDate.invert(d); });
            // 线性插值
            var dataScale = d3_1.scaleLinear(secList, dataList).clamp(true);
            dataScales.set(k, dataScale);
        });
        this.dataScales = dataScales;
    };
    BaseChart.prototype.insertNaN = function (dataList, dateExtent) {
        if (this.maxIntervalMS !== Number.MAX_VALUE) {
            // 如果间隔时间大于一定值，则插入一个 NaN
            // 在后面插入NaN
            var last = dataList[dataList.length - 1];
            if (dateExtent[1].getTime() - last[this.dateField].getTime() >=
                this.maxIntervalMS) {
                var obj = Object.assign({}, last);
                obj[this.valueField] = this.interpolateInitValue;
                obj[this.dateField] = new Date(obj[this.dateField].getTime() + 1);
                // console.log(obj);
                dataList.push(obj);
            }
            // 在前面插入NaN
            var first = dataList[0];
            if (first[this.dateField].getTime() - dateExtent[0].getTime() >=
                this.maxIntervalMS) {
                var obj = Object.assign({}, first);
                obj[this.valueField] = this.interpolateInitValue;
                obj[this.dateField] = new Date(obj[this.dateField].getTime() - 1);
                // console.log(obj);
                dataList.unshift(obj);
            }
            for (var i = 0; i < dataList.length - 1; i++) {
                var prev = dataList[i];
                var next = dataList[i + 1];
                if (next[this.dateField] - prev[this.dateField] >= this.maxIntervalMS) {
                    var obj = Object.assign({}, prev);
                    obj[this.valueField] = NaN;
                    obj[this.dateField] = new Date(obj[this.dateField].getTime() + 1);
                    // console.log(obj);
                    dataList.splice(i + 1, 0, obj);
                    i++;
                }
            }
        }
    };
    BaseChart.prototype.getComponent = function (sec) {
        var res = new Component_1.Component({
            position: this.position,
            alpha: this.alphaScale(sec - this.fadeTime[0] - this.freezeTime[0]),
        });
        return res;
    };
    BaseChart.prototype.setMeta = function () {
        var _this = this;
        if (Recourse_1.recourse.data.get(this.metaName)) {
            this.meta = d3_1.rollup(lodash_1.cloneDeep(Recourse_1.recourse.data.get(this.metaName)), function (v) { return v[0]; }, function (d) { return d[_this.idField]; });
        }
    };
    BaseChart.prototype.setAlphaScale = function () {
        this.alphaScale = d3_1.scaleLinear([
            this.aniTime[0] - this.freezeTime[0] - this.fadeTime[0],
            this.aniTime[0] - this.freezeTime[0],
            this.aniTime[1] + this.freezeTime[1],
            this.aniTime[1] + this.freezeTime[1] + this.fadeTime[1],
        ], [this.fadeTime[0] ? 0 : 1, 1, 1, this.fadeTime[1] ? 0 : 1]).clamp(true);
    };
    BaseChart.prototype.setDefaultAniTime = function (stage) {
        if (this.aniTime === undefined) {
            this.aniTime = [
                0 + this.fadeTime[0] + this.freezeTime[0],
                stage.options.sec - this.freezeTime[1] - this.fadeTime[1],
            ];
        }
    };
    BaseChart.prototype.getCurrentData = function (sec, filter) {
        var _this = this;
        if (filter === void 0) { filter = true; }
        var currentData = __spread(this.dataScales.values());
        currentData = currentData.map(function (scale) {
            return scale(sec);
        });
        if (filter) {
            currentData = currentData.filter(function (d) { return d !== undefined; });
        }
        currentData = currentData.sort(function (a, b) {
            if (Number.isNaN(b[_this.valueField])) {
                return -1;
            }
            else if (Number.isNaN(a[_this.valueField])) {
                return 1;
            }
            else {
                return b[_this.valueField] - a[_this.valueField];
            }
        });
        return currentData;
    };
    BaseChart.prototype.getScalesBySec = function (sec) {
        var _this = this;
        var currentData = this.getCurrentData(sec);
        var _a = __read(d3_1.extent(currentData, function (d) { return d[_this.valueField]; }), 2), minValue = _a[0], maxValue = _a[1];
        if (this.historyMax > maxValue) {
            maxValue = this.historyMax;
        }
        if (this.historyMin < minValue) {
            minValue = this.historyMin;
        }
        var trueSec = sec < this.aniTime[0]
            ? this.aniTime[0]
            : sec > this.aniTime[1]
                ? this.aniTime[1]
                : sec;
        var scales = {
            x: d3_1.scaleLinear([this.aniTime[0], trueSec], [0, this.shape.width - this.margin.left - this.margin.right]),
            y: d3_1.scaleLinear([minValue, maxValue], [this.shape.height - this.margin.top - this.margin.bottom, 0]),
        };
        return scales;
    };
    BaseChart.prototype.getAxis = function (sec, scales) {
        var _this = this;
        var _a, _b;
        var size = 30;
        var tickComp = {
            text: "" + this.yTickFormat(this.currentMax),
            font: Constant_1.font,
            fillStyle: "#777",
            fontSize: size,
        };
        var tickKeySec = this.tickKeySecRange(sec);
        var tickScales = tickKeySec.map(function (s) {
            return _this.getScalesBySec(s);
        });
        this.yAxisWidth = (_b = (_a = CanvasHelper_1.canvasHelper.measure(new Text_1.Text(tickComp))) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 0;
        this.xAxisHeight = size;
        var yAxis = this.getAxisComponent(this.yTickFormat, tickScales[0].y, tickScales[1].y, this.margin.left + this.yAxisWidth, 5, tickComp, "y", sec, tickKeySec, scales.y);
        var xAxis = this.getAxisComponent(this.xTickFormat, tickScales[0].x, tickScales[1].x, this.margin.top + this.xAxisHeight, 5, tickComp, "x", sec, tickKeySec, scales.x);
        return { yAxis: yAxis, xAxis: xAxis };
    };
    BaseChart.prototype.getAxisComponent = function (format, scale0, scale1, pos, count, text, type, sec, secRange, scale) {
        var _this = this;
        var alpha = (sec - secRange[0]) / (secRange[1] - secRange[0]);
        var ticks0 = scale0.ticks(count);
        var ticks1 = scale1.ticks(count);
        var ticks = __spread(ticks0.map(function (t) {
            if (ticks1.find(function (d) { return d === t; })) {
                return { v: t, a: 1, init: 0 };
            }
            else {
                return { v: t, a: 1 - alpha, init: 0 };
            }
        }));
        ticks1.forEach(function (tickVal) {
            var tick = ticks.find(function (d) { return d.v === tickVal; });
            if (tick) {
                tick.a = 1;
            }
            else {
                ticks.push({ v: tickVal, a: alpha, init: 1 });
            }
        });
        var res = new Component_1.Component({
            position: {
                x: this.margin.left + this.yAxisWidth + this.yAxisPadding,
                y: this.margin.top + this.xAxisHeight + this.xAxisPadding,
            },
        });
        res.children = ticks.map(function (tick) {
            var t = new Text_1.Text(text);
            if (type === "y") {
                t.position = { y: scale(tick.v), x: -_this.yAxisPadding };
                t.textAlign = "right";
                t.textBaseline = "middle";
            }
            else {
                t.position = { x: scale(tick.v), y: -_this.xAxisPadding };
                t.textBaseline = "bottom";
                t.textAlign = "center";
            }
            // t.children.push(
            //   new Rect({
            //     shape: { width: 10, height: 1 },
            //     fillStyle: "#Fff",
            //   })
            // );
            t.text = format(tick.v);
            t.alpha = tick.a;
            return t;
        });
        return res;
    };
    BaseChart.prototype.tickKeySecRange = function (sec) {
        var remained = sec % this.tickKeyFrameDuration;
        var start = sec - remained;
        var end = start + this.tickKeyFrameDuration;
        return [start, end];
    };
    return BaseChart;
}(Ani_1.Ani));
exports.BaseChart = BaseChart;
//# sourceMappingURL=data:application/json;base64,